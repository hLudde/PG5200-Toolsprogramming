// <auto-generated />
using System;
using EFSuperHero.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFSuperHero.Data.Migrations
{
    [DbContext(typeof(SuperHeroContext))]
    [Migration("20190910131751_battle-event")]
    partial class battleevent
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFSuperHero.Domain.Battle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<bool>("IsBrutal");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartDate");

                    b.HasKey("Id");

                    b.ToTable("battles");
                });

            modelBuilder.Entity("EFSuperHero.Domain.BattleEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattleLogRefId");

                    b.Property<string>("Description");

                    b.Property<int>("Order");

                    b.Property<string>("Summary");

                    b.HasKey("Id");

                    b.HasIndex("BattleLogRefId");

                    b.ToTable("BattleEvents");
                });

            modelBuilder.Entity("EFSuperHero.Domain.BattleLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BattleRefId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BattleRefId")
                        .IsUnique();

                    b.ToTable("BattleLogs");
                });

            modelBuilder.Entity("EFSuperHero.Domain.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Quality");

                    b.Property<int>("SuperHeroRefId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("SuperHeroRefId");

                    b.ToTable("Quotes");
                });

            modelBuilder.Entity("EFSuperHero.Domain.RealIdentity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RealName");

                    b.Property<int>("SuperHeroRefId");

                    b.HasKey("Id");

                    b.HasIndex("SuperHeroRefId")
                        .IsUnique();

                    b.ToTable("RealIdentities");
                });

            modelBuilder.Entity("EFSuperHero.Domain.SuperHero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HairStyle");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("SuperHeroes");
                });

            modelBuilder.Entity("EFSuperHero.Domain.SuperHeroBattle", b =>
                {
                    b.Property<int>("SuperHeroId");

                    b.Property<int>("BattleId");

                    b.HasKey("SuperHeroId", "BattleId");

                    b.HasAlternateKey("BattleId", "SuperHeroId");

                    b.ToTable("SuperHeroBattles");
                });

            modelBuilder.Entity("EFSuperHero.Domain.BattleEvent", b =>
                {
                    b.HasOne("EFSuperHero.Domain.BattleLog", "BattleLog")
                        .WithMany("BattleEvents")
                        .HasForeignKey("BattleLogRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFSuperHero.Domain.BattleLog", b =>
                {
                    b.HasOne("EFSuperHero.Domain.Battle", "Battle")
                        .WithOne("BattleLog")
                        .HasForeignKey("EFSuperHero.Domain.BattleLog", "BattleRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFSuperHero.Domain.Quote", b =>
                {
                    b.HasOne("EFSuperHero.Domain.SuperHero", "SuperHero")
                        .WithMany("Quotes")
                        .HasForeignKey("SuperHeroRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFSuperHero.Domain.RealIdentity", b =>
                {
                    b.HasOne("EFSuperHero.Domain.SuperHero", "SuperHero")
                        .WithOne("RealIdentity")
                        .HasForeignKey("EFSuperHero.Domain.RealIdentity", "SuperHeroRefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFSuperHero.Domain.SuperHeroBattle", b =>
                {
                    b.HasOne("EFSuperHero.Domain.Battle", "Battle")
                        .WithMany("SuperHeroBattles")
                        .HasForeignKey("BattleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFSuperHero.Domain.SuperHero", "SuperHero")
                        .WithMany("SuperHeroBattles")
                        .HasForeignKey("SuperHeroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
